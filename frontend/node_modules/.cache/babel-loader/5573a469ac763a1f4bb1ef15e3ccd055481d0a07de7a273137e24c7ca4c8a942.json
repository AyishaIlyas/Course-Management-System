{"ast":null,"code":"var _jsxFileName = \"/Users/ayishailyas/Documents/GitHub/Course-Management-System/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport authService from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    if (token && userData) {\n      setUser(JSON.parse(userData));\n      setIsAuthenticated(true);\n      authService.setAuthToken(token);\n    }\n    setLoading(false);\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await authService.login(username, password);\n      const {\n        token,\n        ...userData\n      } = response;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      setIsAuthenticated(true);\n      authService.setAuthToken(token);\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    setIsAuthenticated(false);\n    authService.removeAuthToken();\n  };\n  const register = async userData => {\n    try {\n      const response = await authService.register(userData);\n      return {\n        success: true,\n        data: response\n      };\n    } catch (error) {\n      let errMsg = 'Registration failed';\n      if (error.response && error.response.data) {\n        // Get backend error message\n        if (typeof error.response.data === 'string') {\n          errMsg = error.response.data;\n        } else if (Array.isArray(error.response.data)) {\n          errMsg = error.response.data.map(e => e.defaultMessage).join(', ');\n        }\n      }\n      return {\n        success: false,\n        error: errMsg\n      };\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    logout,\n    register\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"MIOyihIJe1jbesOAPrjh1+/HIzc=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","token","localStorage","getItem","userData","JSON","parse","setAuthToken","login","username","password","response","setItem","stringify","success","error","message","logout","removeItem","removeAuthToken","register","data","errMsg","Array","isArray","map","e","defaultMessage","join","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ayishailyas/Documents/GitHub/Course-Management-System/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport authService from '../services/authService';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    \n    if (token && userData) {\n      setUser(JSON.parse(userData));\n      setIsAuthenticated(true);\n      authService.setAuthToken(token);\n    }\n    \n    setLoading(false);\n  }, []);\n\n  const login = async (username, password) => {\n    try {\n      const response = await authService.login(username, password);\n      const { token, ...userData } = response;\n      \n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      \n      setUser(userData);\n      setIsAuthenticated(true);\n      authService.setAuthToken(token);\n      \n      return { success: true };\n    } catch (error) {\n      return { success: false, error: error.message };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    setIsAuthenticated(false);\n    authService.removeAuthToken();\n  };\n\n  const register = async (userData) => {\n  try {\n    const response = await authService.register(userData);\n    return { success: true, data: response };\n  } catch (error) {\n    let errMsg = 'Registration failed';\n    if (error.response && error.response.data) {\n      // Get backend error message\n      if (typeof error.response.data === 'string') {\n        errMsg = error.response.data;\n      } else if (Array.isArray(error.response.data)) {\n        errMsg = error.response.data.map(e => e.defaultMessage).join(', ');\n      }\n    }\n    return { success: false, error: errMsg };\n  }\n};\n\n\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    logout,\n    register\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}