{"ast":null,"code":"import _objectWithoutProperties from\"/Users/ayishailyas/Documents/GitHub/Course-Management-System/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";const _excluded=[\"token\"];import React,{createContext,useContext,useState,useEffect}from'react';import authService from'../services/authService';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);const[loading,setLoading]=useState(true);useEffect(()=>{const token=localStorage.getItem('token');const userData=localStorage.getItem('user');if(token&&userData){setUser(JSON.parse(userData));setIsAuthenticated(true);authService.setAuthToken(token);}setLoading(false);},[]);const login=async(username,password)=>{try{const response=await authService.login(username,password);const{token}=response,userData=_objectWithoutProperties(response,_excluded);localStorage.setItem('token',token);localStorage.setItem('user',JSON.stringify(userData));setUser(userData);setIsAuthenticated(true);authService.setAuthToken(token);return{success:true};}catch(error){return{success:false,error:error.message};}};const logout=()=>{localStorage.removeItem('token');localStorage.removeItem('user');setUser(null);setIsAuthenticated(false);authService.removeAuthToken();};const register=async userData=>{try{const response=await authService.register(userData);return{success:true,data:response};}catch(error){let errMsg='Registration failed';if(error.response&&error.response.data){// Get backend error message\nif(typeof error.response.data==='string'){errMsg=error.response.data;}else if(Array.isArray(error.response.data)){errMsg=error.response.data.map(e=>e.defaultMessage).join(', ');}}return{success:false,error:errMsg};}};const value={user,isAuthenticated,loading,login,logout,register};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","token","localStorage","getItem","userData","JSON","parse","setAuthToken","login","username","password","response","_objectWithoutProperties","_excluded","setItem","stringify","success","error","message","logout","removeItem","removeAuthToken","register","data","errMsg","Array","isArray","map","e","defaultMessage","join","value","Provider"],"sources":["/Users/ayishailyas/Documents/GitHub/Course-Management-System/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport authService from '../services/authService';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    \n    if (token && userData) {\n      setUser(JSON.parse(userData));\n      setIsAuthenticated(true);\n      authService.setAuthToken(token);\n    }\n    \n    setLoading(false);\n  }, []);\n\n  const login = async (username, password) => {\n    try {\n      const response = await authService.login(username, password);\n      const { token, ...userData } = response;\n      \n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      \n      setUser(userData);\n      setIsAuthenticated(true);\n      authService.setAuthToken(token);\n      \n      return { success: true };\n    } catch (error) {\n      return { success: false, error: error.message };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    setIsAuthenticated(false);\n    authService.removeAuthToken();\n  };\n\n  const register = async (userData) => {\n  try {\n    const response = await authService.register(userData);\n    return { success: true, data: response };\n  } catch (error) {\n    let errMsg = 'Registration failed';\n    if (error.response && error.response.data) {\n      // Get backend error message\n      if (typeof error.response.data === 'string') {\n        errMsg = error.response.data;\n      } else if (Array.isArray(error.response.data)) {\n        errMsg = error.response.data.map(e => e.defaultMessage).join(', ');\n      }\n    }\n    return { success: false, error: errMsg };\n  }\n};\n\n\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    logout,\n    register\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}